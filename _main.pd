#N canvas 112 35 1146 732 12;
#X obj 230 148 s bela_setGui;
#X obj 74 179 r bela_guiControl;
#N canvas 0 22 450 278 (subpatch) 0;
#X array xy 2 float 3;
#A 0 0.357143 -0.214291;
#X coords 0 1 2 -1 200 140 1 0 0;
#X restore 873 119 graph;
#X obj 639 208 metro 400;
#X obj 241 27 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 242 9 loadbang;
#X obj 639 173 loadbang;
#X text 32 51 Receive a message when mousex or mousey are received
;
#X text 528 67 Bela.data.sendBuffer(0 \, 'float' \, [...]);
#X text 32 61 on the control websocket: Bela.control.send(...);
#X obj 273 240 print guiControl: clickY;
#X msg 89 81 new control mouseX;
#X msg 237 84 new control mouseY;
#X msg 99 116 new control clickX;
#X msg 247 119 new control clickY;
#X obj 74 213 route mouseX mouseY clickX clickY;
#X msg 532 87 new array xy;
#X text 507 55 Update array xy with the input values from buffer 0:
;
#X obj 753 233 array get xy;
#X obj 709 329 tabread xy;
#X obj 792 335 tabread xy;
#X obj 261 275 print guiControl: clickX;
#X floatatom 783 282 5 0 0 0 - - -;
#X obj 712 374 change;
#X obj 792 373 change;
#X obj 710 420 s width;
#X obj 791 421 s height;
#X obj 56 300 /;
#X obj 78 261 r width;
#X obj 145 334 /;
#X obj 162 296 r height;
#X obj 145 369 print filter;
#X obj 45 400 mtof;
#X obj 58 329 * 24;
#X obj 482 560 snapshot~;
#X obj 604 467 loadbang;
#X obj 592 498 metro 200;
#X obj 833 304 + 1;
#X obj 474 593 > 0.5;
#X floatatom 486 426 5 0 0 0 - - -;
#X obj 19 352 + 48;
#X obj 76 377 +;
#X obj 474 637 change;
#X obj 454 671 sel 1;
#X obj 445 740 ==;
#X floatatom 428 704 5 0 0 0 - - -;
#X obj 483 499 adc~ 3 4;
#X obj 35 503 osc~ 440;
#X obj 35 525 *~ 0.1;
#X obj 35 547 dac~;
#X obj 638 562 snapshot~;
#X obj 637 594 > 0.5;
#X obj 637 638 change;
#X obj 617 672 sel 1;
#X obj 608 741 ==;
#X floatatom 591 705 5 0 0 0 - - -;
#X obj 644 705 r filterBtn;
#X obj 604 782 s filterBtn;
#X floatatom 571 403 5 0 0 0 - - -;
#X obj 572 437 s filterBtn;
#X text 865 289 When the array changes \, get the window width and
height;
#X obj 487 460 s soundBtn;
#X obj 481 704 r soundBtn;
#X obj 441 781 s soundBtn;
#X obj 57 456 print frequency;
#X text 100 507 Sinus for testing;
#X text 93 403 <-Add sounds from here \, outputs frequencies between
130-520hz aka 2 octaves;
#X text 178 336 <-Add filters from here \, outputs a float between
0-1;
#X text 674 515 Save the state of each button as 1 or 0 only when the
state changes;
#X connect 1 0 15 0;
#X connect 3 0 22 0;
#X connect 3 0 18 0;
#X connect 4 0 11 0;
#X connect 4 0 12 0;
#X connect 4 0 13 0;
#X connect 4 0 14 0;
#X connect 4 0 16 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X connect 13 0 0 0;
#X connect 14 0 0 0;
#X connect 15 0 27 0;
#X connect 15 1 29 0;
#X connect 15 2 21 0;
#X connect 15 3 10 0;
#X connect 16 0 0 0;
#X connect 19 0 23 0;
#X connect 20 0 24 0;
#X connect 22 0 19 0;
#X connect 22 0 37 0;
#X connect 23 0 25 0;
#X connect 24 0 26 0;
#X connect 27 0 33 0;
#X connect 28 0 27 1;
#X connect 29 0 31 0;
#X connect 30 0 29 1;
#X connect 32 0 47 0;
#X connect 32 0 64 0;
#X connect 33 0 40 0;
#X connect 34 0 38 0;
#X connect 35 0 36 0;
#X connect 36 0 34 0;
#X connect 36 0 50 0;
#X connect 37 0 20 0;
#X connect 38 0 42 0;
#X connect 39 0 61 0;
#X connect 40 0 41 0;
#X connect 41 0 32 0;
#X connect 42 0 43 0;
#X connect 43 0 45 0;
#X connect 44 0 63 0;
#X connect 45 0 44 0;
#X connect 46 0 34 0;
#X connect 46 1 50 0;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 48 0 49 1;
#X connect 50 0 51 0;
#X connect 51 0 52 0;
#X connect 52 0 53 0;
#X connect 53 0 55 0;
#X connect 54 0 57 0;
#X connect 55 0 54 0;
#X connect 56 0 54 1;
#X connect 58 0 59 0;
#X connect 62 0 44 1;
